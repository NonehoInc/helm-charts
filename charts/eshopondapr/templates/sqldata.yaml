kind: Deployment
apiVersion: apps/v1
metadata:
  name: sqldata
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: sqldata
spec:
  replicas: 1
  selector:
    matchLabels:
      service: sqldata
  template:
    metadata:
      labels:
        app: eshop
        service: sqldata
    spec:
      containers:
        - name: sqldata
          image: mcr.microsoft.com/azure-sql-edge
          imagePullPolicy: IfNotPresent
          ports:
            - name: sqlserver
              containerPort: 1433
              protocol: TCP
          env:
            - name: SA_PASSWORD
              value: Pass@word
            - name: ACCEPT_EULA
              value: "Y"
          resources:
            {{- toYaml .Values.sqldata.resources | nindent 12 }}
          volumeMounts:
            - name: sqldata
              mountPath: /var/opt/mssql
      volumes:
        - name: sqldata
          persistentVolumeClaim:
            claimName: mssql-data
---

kind: Service
apiVersion: v1
metadata:
  name: sqldata
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: sqldata
spec:
  ports:
    - port: 1433
      targetPort: 1433
      protocol: TCP
      name: tds
  selector:
    service: sqldata
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
     name: azure-disk
provisioner: kubernetes.io/azure-disk
parameters:
  storageaccounttype: Standard_LRS
  kind: managed
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-data
  annotations:
    volume.beta.kubernetes.io/storage-class: azure-disk
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
