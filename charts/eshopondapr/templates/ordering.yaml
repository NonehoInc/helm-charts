{{- $protocol := include "protocol" . -}}

kind: ConfigMap
apiVersion: v1
metadata:
  name: ordering-cm
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering
data:
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://0.0.0.0:80
  IdentityUrl: http://identity-api
  IdentityUrlExternal: {{ .Values.identity.externalUrl }}/identity #{{ $protocol }}://{{ .Values.hostName}}:30008
  SeqServerUrl: http://seq
  APPLICATIONINSIGHTS_CONNECTION_STRING: {{ .Values.aiConnectionString }}

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: ordering
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ordering
  template:
    metadata:
      labels:
        app: eshop
        service: ordering
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "ordering-api"
        dapr.io/app-port: "80"
        dapr.io/config: "dapr-config"
        dapr.io/log-as-json: "true"
    spec:
      containers:
        - name: ordering-api
          image: {{ .Values.ordering.image.repository }}:{{ .Values.ordering.image.tag }}
          imagePullPolicy: {{ .Values.ordering.image.pullPolicy }}
          ports:
            - name: api-http
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: ordering-cm
          resources:
            {{- toYaml .Values.ordering.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /hc
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: ordering-api
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering
spec:
  ports:
    - name: http
      port: 80
      targetPort: api-http
  selector:
    service: ordering

---
{{- if eq .Values.ordering.ingress.enabled true }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ordering-ingress
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering-api
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.ingress.className }}
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  - host: {{ .Values.hostName }}
    http:
      paths: 
      - path: /ordering(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ordering-api
            port: 
              number: 80
{{ end }}